# This workflow will build a Java project with Maven
name: Java CI with Maven in Linux

on:
    push:
    pull_request:

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                # test against several Java versions:
                java: [ 8, 11]        
                include:
                  - java: 17
                    additional-maven-args: >
                        -Pjacoco
                        -DrepoToken=$COVERALLS_REPO_TOKEN
                        -DpullRequest=${{ github.event.pull_request.number }}
                        coveralls:report
        
        name: Build with Java ${{ matrix.java }}
        
        steps:
        - uses: actions/checkout@v3
        - name: Set up JDK ${{ matrix.java }}
          uses: actions/setup-java@v3
          with:
              distribution: 'zulu'
              java-version: ${{ matrix.java }}
     
        - name: Cache Maven packages
          uses: actions/cache@v3	
          with:
              path: ~/.m2
              key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml', '**/*.yml') }}
              restore-keys: ${{ runner.os }}-m2-
        - name: Build with Maven
          run: >
              mvn -f myapp/pom.xml clean verify ${{ matrix.additional-maven-args }}
          env:
              COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
        - name: Generate JUnit Report
          run: >
              mvn -f myapp/pom.xml
              surefire-report:report-only site:site -DgenerateReports=false
          if: ${{ failure() }}  
        - name: Archive JUnit Report
          uses: actions/upload-artifact@v3
          if: ${{ failure() }}
          with:
              name: surefire-report-jdk-${{ matrix.java }}
              path: '**/target/site'