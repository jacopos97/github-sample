# This workflow will build a Java project with Maven
name: Java CI with Maven in Linux

on:
    push:
    pull_request:

jobs:
    build:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                # test against several Java versions:
                java: [ 8, 11, 17 ]
                # test against several OSes:
                os: [ubuntu-latest, macos-latest, windows-latest]
        
        name: Build with Java ${{ matrix.java }} on ${{ matrix.os }}
        
        steps:
        - uses: actions/checkout@v3
        - name: Set up JDK ${{ matrix.java }}
          uses: actions/setup-java@v3
          with:
              distribution: 'zulu'
              java-version: ${{ matrix.java }}
     
        - name: Cache Maven packages
          uses: actions/cache@v3	
          with:
              path: ~/.m2
              key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml', '**/*.yml') }}
              restore-keys: ${{ runner.os }}-m2-
        - name: Build with Maven
          run: >
              mvn -f myapp/pom.xml clean verify
              surefire-report:report-only site:site -DgenerateReports=false
        - name: Generate JUnit Report
          run: >
              mvn -f mapp/pom.xml
              surefire-report:report-only site:site -DgenerateReports=false
          if: ${{ always() }}  
        - name: Archive JUnit Report
          uses: actions/upload-artifact@v3
          if: ${{ always() }}
          with:
              name: surefire-report-jdk-${{ matrix.java }}-${{ matrix.os}}
              path: '**/target/site'